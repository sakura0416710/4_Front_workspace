.size-test{border : 2px solid purple;}
#fixed-size{
  width: 300px;
  height: 200px; }
#variable-size{
  width: 80%;
  height: 200px; }

  .display{width: 150px; height:150px ; border : 1px solid pink;}   
  .area1{background-color: red;}
  .area2{background-color: orange;}
  .area3{background-color: yellow;}
  .area4{background-color: green;}  
  .area5{background-color: blue;}

  .display-test1{display : inline;}
  .display-test3{display :block;} /*요소가 블록-크기지정가능 + 영억은 인라인-붙어서 나란히 */
  .display-test2{display : inline-block;}

  .flex-container{
        background : lightcoral;
        display : flex;
        /*가로정렬*/
        justify-content: flex-start; /* 요소를 왼쪽으로 정렬 */;
        justify-content: flex-end;
        justify-content : center;
        justify-content: space-around; /*둘레를 똑같이 만들어줌 */
        justify-content: space-between;
        justify-content: space-evenly; /* 요소 사이에 동일한 간격을 둠 */

        /*세로정렬*/
        align-items : stretch; /* 요소를 세로로 늘림 */
        align-items : flex-start; /* 위에 붙어서 나옴 */
        align-items : flex-end; /* 아래에 붙어서 나옴 */
        align-items : center; /* 가운데 정렬 */

    }


  .flex-container>div{display : inline-block;}
  #flex1{width : 600px;  background : lightblue;}
  #flex2{width : 200px;  background : lightgreen;}
  #flex3{width : 400px; background : lightyellow;}

  #grid1{background : lavender;}
  #grid2{background : lightpink;}
  #grid3{background : lightgray;}
  #grid4{background : lightcyan;}
  #grid5{background : lightgoldenrodyellow;}
  #grid6{background : lightcoral;}
  #grid7{background : lightseagreen;}
  #grid8{background : lightsteelblue;}
  #grid9{background : lightblue;}

  .grid-container{
    display : grid;
    grid-template-columns: 200px 200px 300px; /* 3개의 열을 동일한 너비로 설정 */
    grid-template-columns: 1fr 1fr 1fr; /* 비율로 넣을 떄 */
    grid-template-columns: repeat(3, 1fr); /* n개를 ~로 반복해서 넣겠다 */
    grid-template-rows: repeat(3, 1fr); /* 3개의 행을 동일한 높이로 설정 */
    gap: 10px; /* 그리드 아이템 사이의 간격 */
    width: 100%;
    height: 100%;
  } 
  .grid-container>div:nth-child(1){
    grid-column: 1 / 3; /* 첫 번째 아이템은 첫 번째 열에서 두 번째 열까지 차지 */
    grid-column : 1/ span 2;
    grid-row: 1 / 3; /* = grid-row : 1/span 2; -> span이 차지하다는 뜻이므로 */
    
  }



  .border{width : 100px; height:100px;}
  #border-test1{border-style : none; }
  #border-test2{border-style : hidden; box-shadow : 5px 5px 3px 2px gray;}
 /*수평 수직 흐림정도(그림자) 번짐정도(차지하는영역) 색상 */

  #border-test3{border-style : dotted;}
  #border-test4{border-style : dashed; border-top-color : red;}
  #border-test5{border-style : double; border-color : red;}
  #border-test6{border-style : groove; border-top-left-radius : 50px;}
  #border-test7{border-style : inset; border-bottom-right-radius: 50px;}
  #border-test8{border-style : outset; border-top-right-radius : 50px ; border-bottom-left-radius:50px;}
  #border-test9 {border-style : ridge;}
  #border-test10{border-style : solid;  border-width :10px;}

  .space{background: beige; width: 100px; height: 100px;}
  #padding1{padding : 10px;}
  #padding2{padding-top : 50px; padding-left:100px;}
  #margin1{margin: 50px;}
  #margin2{margin-top : 20px; margin-left:100px;}

  .positioning{border : 1px solid black;}
  .outer{position : relative;}
  #first{width : 300px; height:300px; background: yellow;}
  #second{width:200px; height:200px; background : yellowgreen;
  position : absolute; top : 50px; /* 부모요소를 기준으로 위치를 잡음 */}
  #third{width:100px; height:100px; background : red;
  position : absolute; top : 100px; left: 100px; } 

  #fixed-area{width:100px; height:100px; background : blue; position : fixed;}